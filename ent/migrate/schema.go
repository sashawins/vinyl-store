// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminsColumns holds the columns for the "admins" table.
	AdminsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password_hash", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AdminsTable holds the schema information for the "admins" table.
	AdminsTable = &schema.Table{
		Name:       "admins",
		Columns:    AdminsColumns,
		PrimaryKey: []*schema.Column{AdminsColumns[0]},
	}
	// ArtistsColumns holds the columns for the "artists" table.
	ArtistsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "country", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// ArtistsTable holds the schema information for the "artists" table.
	ArtistsTable = &schema.Table{
		Name:       "artists",
		Columns:    ArtistsColumns,
		PrimaryKey: []*schema.Column{ArtistsColumns[0]},
	}
	// GenresColumns holds the columns for the "genres" table.
	GenresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// GenresTable holds the schema information for the "genres" table.
	GenresTable = &schema.Table{
		Name:       "genres",
		Columns:    GenresColumns,
		PrimaryKey: []*schema.Column{GenresColumns[0]},
	}
	// NewsColumns holds the columns for the "news" table.
	NewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString},
		{Name: "content", Type: field.TypeString},
		{Name: "published_at", Type: field.TypeTime},
	}
	// NewsTable holds the schema information for the "news" table.
	NewsTable = &schema.Table{
		Name:       "news",
		Columns:    NewsColumns,
		PrimaryKey: []*schema.Column{NewsColumns[0]},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "status", Type: field.TypeString, Default: "pending"},
		{Name: "total_amount", Type: field.TypeFloat64, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
	}
	// OrderItemsColumns holds the columns for the "order_items" table.
	OrderItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "order_id", Type: field.TypeUUID},
		{Name: "vinyl_id", Type: field.TypeUUID},
		{Name: "quantity", Type: field.TypeInt, Default: 1},
		{Name: "unit_price", Type: field.TypeFloat64},
	}
	// OrderItemsTable holds the schema information for the "order_items" table.
	OrderItemsTable = &schema.Table{
		Name:       "order_items",
		Columns:    OrderItemsColumns,
		PrimaryKey: []*schema.Column{OrderItemsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "email", Type: field.TypeString},
		{Name: "password_hash", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// VinylsColumns holds the columns for the "vinyls" table.
	VinylsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "stock_count", Type: field.TypeInt32},
		{Name: "cover_url", Type: field.TypeString, Nullable: true},
		{Name: "artist_id", Type: field.TypeUUID},
		{Name: "genre_id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
	}
	// VinylsTable holds the schema information for the "vinyls" table.
	VinylsTable = &schema.Table{
		Name:       "vinyls",
		Columns:    VinylsColumns,
		PrimaryKey: []*schema.Column{VinylsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminsTable,
		ArtistsTable,
		GenresTable,
		NewsTable,
		OrdersTable,
		OrderItemsTable,
		UsersTable,
		VinylsTable,
	}
)

func init() {
}
